language: python

env:
  global:
    BUILD_DOCS_BRANCH: master
    DOCS_SUBDIR: doc/
    TARGET_DEV_SUBDIR: suitcase/
    HTML_SUBDIR: build/html
    DOCS_CONDA_DEPS: "matplotlib"
    DOCS_PIP_DEPS: "tqdm"

services:
  - mongodb

addons:
  apt:
    sources:
    - mongodb-3.2-precise
    packages:
    - mongodb-org-server

cache:
  directories:
    - $HOME/.cache/pip

matrix:
  include:
    - python: 2.7
      env: BUILD_DOCS=false
    - python: 3.5
      env: BUILD_DOCS=false
    - python: 3.6
      env: BUILD_DOCS=true

before_install:
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
  - "export DISPLAY=:99.0"
  # clone conda install/build/upload helper scripts and make them executable
  - git clone https://github.com/NSLS-II/nsls2-ci ~/scripts
  - chmod +x ~/scripts/*.sh
  # install miniconda/anaconda-client/conda-build
  - . ~/scripts/install-miniconda.sh
  # remove conda-forge because h5py and hdf5 are broken packages. gzip does not work
  # if I use the packages from the conda-forge channel
#  - conda config --remove channels conda-forge --force
  - . ~/scripts/init-metadatastore.sh
  - . ~/scripts/init-filestore.sh

install:
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - conda update conda
  - conda create -n testenv pip pytest python=$TRAVIS_PYTHON_VERSION databroker numpy h5py coverage event-model doct jinja2 pandas prettytable ophyd
  - source activate testenv
  - if [[ $TRAVIS_PYTHON_VERSION != "2.7" ]]; then
      conda install databroker bluesky -c lightsource2-tag;
      conda update ophyd -c lightsource2-dev;
    else
      pip install singledispatch;
      conda install databroker -c lightsource2-tag;
    fi;
  - pip install codecov
  - python setup.py install
  # Need to clean the python build directory (and other cruft) or pytest is
  # going to find the build directory and get confused why there are two sets
  # of every test file
  - git clean -xfd


script:
  - coverage run run_tests.py
  - coverage report -m
  - |
    if [ $BUILD_DOCS == true ]; then
      source ~/scripts/make-docs.sh
    fi

after_success:
  - codecov
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == 'NSLS-II/suitcase' && $BUILD_DOCS == true && $TRAVIS_BRANCH == 'master' ]]; then
      echo "Adding encrypted deployment key for uploading docs"
      openssl aes-256-cbc -K $encrypted_1e6da8cdbab8_key -iv $encrypted_1e6da8cdbab8_iv -in deploy_key_suitcase.enc -out deploy_key_suitcase -d
      eval `ssh-agent -s`
      chmod 600 deploy_key_suitcase
      ssh-add deploy_key_suitcase
      source ~/scripts/push-docs.sh
    fi
